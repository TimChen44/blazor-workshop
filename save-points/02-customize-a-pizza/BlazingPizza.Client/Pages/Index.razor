@page "/"
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@inject IJSRuntime JS
@inject DrawerService DrawerSvr

<Row Style="height:100%">
    <AntDesign.Col Span="20">
        <Spin Spinning="loading">
            @if (specials != null)
            {
                <div style="display: flex; flex-wrap: wrap;">
                    @foreach (var special in specials)
                    {
                        <Card Loading="loading" Hoverable Style="width: 23%;margin:1%">
                            <Cover>
                                <img src="@special.ImageUrl" style="height:250px" />
                            </Cover>
                            <ChildContent>
                                <div style=" display: flex; flex-direction: row; justify-content: space-between; margin: -12px;">
                                    <CardMeta Title="@special.Name" Description="@special.GetFormattedBasePrice()" />
                                    <Button OnClick="x=>ShowConfigurePizzaDialog(special)">  <Icon Type="shopping-cart" />ADD</Button>
                                </div>
                            </ChildContent>
                        </Card>
                    }
                </div>
            }
        </Spin>
    </AntDesign.Col>
    <AntDesign.Col Span="4">
        <div class="sidebar">
            @if (order.Pizzas.Any())
            {
                <div class="order-contents">
                    <h2>Your order</h2>

                    @foreach (var configuredPizza in order.Pizzas)
                    {
                        <ConfiguredPizzaItem Pizza="configuredPizza" OnRemoved="@(() => RemovePizza(configuredPizza))" />
                    }
                </div>
            }
            else
            {
                <div class="empty-cart">Choose a pizza<br>to get started</div>
            }

            <div class="order-total @(order.Pizzas.Any() ? "" : "hidden")">
                Total:
                <span class="total-price">@order.GetFormattedTotalPrice()</span>
                <a href="checkout" class="@(order.Pizzas.Count == 0 ? "btn btn-warning disabled" : "btn btn-warning")">
                    Order>
                </a>
            </div>
        </div>
    </AntDesign.Col>
</Row>

@code {
    List<PizzaSpecial> specials;
    Pizza configuringPizza;
    Order order = new Order();

    bool loading = false;

    protected override async Task OnInitializedAsync()
    {
        loading = true;
        specials = await HttpClient.GetFromJsonAsync<List<PizzaSpecial>>("specials");
        loading = false;
    }

    async void ShowConfigurePizzaDialog(PizzaSpecial special)
    {
        var configuringPizza = new Pizza()
        {
            Special = special,
            SpecialId = special.Id,
            Size = Pizza.DefaultSize,
            Toppings = new List<PizzaTopping>(),
        };
        var result = await DrawerSvr.CreateDialogAsync<ConfigurePizzaDialog, Pizza, Pizza>(configuringPizza, title: special.Name, width: 450);
        if (result != null)
        {
            order.Pizzas.Add(configuringPizza);
            configuringPizza = null;
            StateHasChanged();
        }
    }

    void RemovePizza(Pizza configuredPizza)
    {
        order.Pizzas.Remove(configuredPizza);
    }

}